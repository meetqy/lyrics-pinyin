# Lyrics Pinyin - Chinese Learning Platform

## Overview
- **Website**: [lyrics-pinyin.com](https://lyrics-pinyin.com)
- **GitHub**: [github.com/meetqy/lyrics-pinyin](https://github.com/meetqy/lyrics-pinyin)
- **License**: AGPL-3.0

## Project Description
Lyrics Pinyin is a comprehensive Chinese learning platform that leverages music to enhance language acquisition. The platform provides synchronized pinyin annotations for Chinese song lyrics, making it easier for learners to understand pronunciation and character meanings.

## Core Features

### Learning Tools
- 🎵 Real-time synchronized Chinese characters with pinyin
- 📝 Complete pinyin coverage for all characters
- 📱 Mobile-first responsive design
- 🖨️ Print-optimized formatting
- 📥 PDF export functionality

### User Experience
- 🔍 Advanced search for songs and artists
- ⭐ Song difficulty ratings
- 🆓 No registration required
- 📊 Learning progress tracking
- 🌐 Multi-language interface support

## Technical Architecture

### Frontend Stack
- **Framework**: Next.js 14
- **Language**: TypeScript 5.x
- **Styling**: 
  - Tailwind CSS
  - shadcn/ui components
- **State Management**: Apollo Client
- **Build Tools**: Webpack 5

### Backend Infrastructure
- **CMS**: Strapi v4
- **Database**: PostgreSQL 15
- **API**: GraphQL
- **Authentication**: JWT

### Deployment
- Frontend: Vercel (Production/Preview)
- Backend: Digital Ocean Droplets
- Database: Managed PostgreSQL

## Directory Structure
```
/
├── nextjs/                 # Frontend application
│   ├── app/               # Next.js app router
│   ├── components/        # React components
│   ├── lib/              # Utility functions
│   └── public/           # Static assets
└── strapi/                # Backend CMS
    ├── api/              # API endpoints
    ├── config/           # CMS configuration
    └── database/         # Database configs
```

## Development Setup
1. Clone repository
2. Install dependencies:
   ```bash
   cd nextjs && pnpm install
   cd strapi && npm install
   ```
3. Configure environment variables
4. Start development servers:
   ```bash
   # Frontend
   pnpm dev
   # Backend
   npm run develop
   ```

## Contributing
- Fork the repository
- Create feature branch
- Submit pull request
- Follow coding standards
- Include tests for new features